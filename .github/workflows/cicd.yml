name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
 

permissions:
  contents: read
# env:
#   DATREE_TOKEN: ${{ secrets.DATREE_TOKEN }} 


jobs:
  build:

    runs-on: self-hosted

    steps:
    #JDK WITH GRADLE
#     - uses: actions/checkout@v3
#     - name: Set up JDK 11
#       uses: actions/setup-java@v3
#       with:
#         java-version: '11'
#         distribution: 'temurin'
#     - name: Add execute permission to Gradle
#       run: chmod +x gradlew
#     - name: Build with Gradle 
#       uses:  gradle/gradle-build-action@v2.3.3
#       with:
#         arguments: build
        
        
    # SONARQUBE    
    # Triggering SonarQube analysis as results of it are required by Quality Gate check.
#     - name: SonarQube Scan
#       uses: sonarsource/sonarqube-scan-action@master
#       env:
#         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#         SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
#     # Check the Quality Gate status.
#     - name: SonarQube Quality Gate check
#       id: sonarqube-quality-gate-check
#       uses: sonarsource/sonarqube-quality-gate-action@master
#       # Force to fail step after specific time.
#       timeout-minutes: 5
#       env:
#        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 
       
       
     #DATREE
#     - name: Run Datree Policy Check
#       uses: datreeio/action-datree@main
#       with:
#         path: 'kube.yaml'
#         cliArguments: '--only-k8s-files'
    
    
    #DOCKER
#     - name: Login to Docker Hub
#       uses: docker/login-action@v2
#       with:
#         #registry: http://127.0.0.1:8081
#         username: ${{ secrets.DOCKERHUB_USERNAME }}
#         password: ${{ secrets.DOCKERHUB_TOKEN }}
#     - name: docker build
#       run: 
#         docker build -t bopgeek/javak8sdatree:${{ github.run_number }} .
#     - name: docker push
#       run: 
#         docker push  bopgeek/javak8sdatree:${{ github.run_number }}
        
        
    # DEPLOYING KUBERNETES
    - name: Trigger deploy for kubernetes manifest
      run: |
        sed -i "s;imagename;bopgeek/javak8sdatree:14;g"  k8s.yaml
        kubectl apply -f k8s.yaml
        kubectl get all
        
#     - name: test deployed manifest
#       run: |
#         sleep 60
#         kubectl run curl --image=curlimages/curl -i --rm --restart=Never -- curl myapp:8080
        
    # SENDING MAIL
    - name: Send mail
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        # Server port, default 25:
        server_port: 465
        # Optional whether this connection use TLS (default is true if server_port is 465)
        # secure: true
        # Optional (recommended): mail server username:
        username: ${{secrets.MAIL_USERNAME}}
        # Optional (recommended) mail server password:
        password: ${{secrets.MAIL_PASSWORD}}
        # Required mail subject:
        subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
        # Required recipients' addresses:
        to: njokuifeanyigerald@gmail.com
        # Required sender full name (address can be skipped):
        from: Ifeanyi Gerald Njoku # <user@example.com>
        # Optional plain body:
        body: ${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}
        


